@startuml

interface Component <<abstract>>{
	{abstract} + Operation()
}

class ConcreteComponent{
	+ Operation()
}

class Decorator {
    - Component* component
	+ Operation()
}

Class ConcreteDecoratorA{
	+ Operation()
	- addedState
}

Class ConcreteDecoratorB {
	+ Operation()
	- addedBehavior()
}

Component <|-- ConcreteComponent
Component <|-- Decorator

Component <--o "component" Decorator

Decorator <|-- ConcreteDecoratorA
Decorator <|-- ConcreteDecoratorB

note left of Decorator
Operation(){
    component->Operation()
}
end note

note left of ConcreteDecoratorB
Operation(){
    Decorator::Operation();
    addedBehavior();    
    }
end note

note right of ConcreteDecoratorA
Operation(){
    Decorator::Operation();
    addedStated;    
    }
end note
@enduml